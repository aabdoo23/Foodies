@model IEnumerable<Restaurant>

<html>
<head>
    <title>Restaurant List</title>
    <link rel="stylesheet" href="~/css/restaurant.css">
    <link rel="stylesheet" href="~/css/Main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css"> <!-- Bootstrap Icons -->
</head>

<body>
    <br /><br /><br /><br />
    <div class="category-bar d-flex justify-content-center">
        @{
            var ef = Model.Select(r => r.CuisineType).Distinct();
            foreach (var i in ef)
            {
                                <div class="category-item" data-category="@i">
                                    <button class="category-button">@i</button>
                                </div>
            }
        }
    </div>

    <div class="search-section">
        <div class="search-group">
            <input id="restaurantSearch" placeholder="Search" type="search" class="search-input">
        </div>
    </div>

    <div class="restaurant-cards">
        @{foreach (var restaurant in Model)
        {

                <div class="card restaurant-card" data-cuisine-type="@restaurant.CuisineType">
    <a href="/Menu/Index?restaurantId=@restaurant.Id" class="image-link">
        <div class="image-container">
                            <img src="@restaurant.Photo" alt="Restaurant" class="restaurant-image">
                        </div>
                    </a>
                    <div class="card-content">
                        <h2 class="restaurant-name">@restaurant.Name</h2>
                        <div class="actions">
                        
                            @if (@ViewBag?.fav?.FavouriteRestaurants.Count > 0 ){

                                if (@ViewBag?.fav?.FavouriteRestaurants.Contains(restaurant))
                                    {
                                        <i class="bi bi-heart-fill" id="fav-@restaurant.Id" onclick="addToFavourites('@restaurant.Id')"></i>
                                    }
                                else
                                {

                                    <i class="bi bi-heart" id="fav-@restaurant.Id" onclick="addToFavourites('@restaurant.Id')"></i>
                                }
                            }

                            else
                            {

                                <i class="bi bi-heart" id="fav-@restaurant.Id" onclick="addToFavourites('@restaurant.Id')"></i>
                            }
                                                    <div class="rating">
                                <span class="star" data-value="5">&#9733;</span>
                                <span class="star" data-value="4">&#9733;</span>
                                <span class="star" data-value="3">&#9733;</span>
                                <span class="star" data-value="2">&#9733;</span>
                                <span class="star" data-value="1">&#9733;</span>
                            </div>
                        </div>
                        <button class="submit-rating" id="submitRatingBtn">Submit Rating</button>
                        <p id="ratingResult" class="rating-result"></p>
                    </div>
                </div>
        }
        }
    </div>

</body>
</html>
 
<script>
    function addToFavourites(resId) {
        var button = document.getElementById("fav-" + resId);

        if (button.classList.contains("bi-heart")) {
            button.classList.remove("bi-heart");
            button.classList.add("bi-heart-fill");

            $.ajax({
                url: '/menu/addToFav',
                type: 'post',
                data: { resId: resId },
                success: function (response) {
                    alert('Added to favorites');
                },
                error: function (err) {
                    console.error('Error adding to favorites', err);
                }
            });
        }
        else {
            button.classList.remove("bi-heart-fill");
            button.classList.add("bi-heart");
            $.ajax({
                url: '/menu/removeFav',
                type: 'post',
                data: { resId: resId },
                success: function (response) {
                    alert('Removed from favorites');
                },
                error: function (err) {
                    console.error('Error removing from favorites', err);
                }
            });
        }
    }
     document.querySelectorAll('.category-item button').forEach(item => {
        item.addEventListener('click', function(event) {
            event.preventDefault();
            var selectedCategory = this.closest('.category-item').getAttribute('data-category');
            var restaurantCards = document.querySelectorAll('.restaurant-card'); // Ensure correct class reference

            restaurantCards.forEach(card => {
                var cuisineType = card.getAttribute('data-cuisine-type');
                if (cuisineType === selectedCategory || selectedCategory === 'All') {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });
    });

   document.getElementById('restaurantSearch').addEventListener('input', function() {
        var searchQuery = this.value.toLowerCase();
        var restaurantCards = document.querySelectorAll('.restaurant-card'); // Ensure correct class reference

        restaurantCards.forEach(card => {
            var restaurantName = card.querySelector('.restaurant-name').textContent.toLowerCase();
            if (restaurantName.includes(searchQuery)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const rateButtons = document.querySelectorAll('.rate-restaurant');

        rateButtons.forEach(button => {
            button.addEventListener('click', function () {
                const ratingInput = this.nextElementSibling;
                ratingInput.style.display = ratingInput.style.display === 'none' ? 'flex' : 'none';
            });
        });

        const submitButtons = document.querySelectorAll('.submit-rating');

        submitButtons.forEach(button => {
            button.addEventListener('click', async function () {
                const restaurantId = this.getAttribute('data-restaurant-id');
                const ratingValue = this.previousElementSibling.value;

                if (ratingValue) {
                    const response = await fetch(`/Menu/AddRating`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ RestaurantId: restaurantId, Rate: parseFloat(ratingValue) })
                    });

                    if (response.ok) {
                        alert('Thank you for your rating!');
                        location.reload();
                    } else {
                        alert('An error occurred while submitting your rating.');
                    }
                } else {
                    alert('Please enter a rating.');
                }
            });
        });
    });


    /*
    card js 
    */ 
   // Favorite Button Toggle
// const favoriteBtn = document.getElementById('favoriteBtn');
// favoriteBtn.addEventListener('click', function() {
//     favoriteBtn.classList.toggle('active');
// });

// Rating System (left to right logic)
const stars = document.querySelectorAll('.star');
let selectedRating = 0;

stars.forEach((star, index) => {
    star.addEventListener('click', function() {
        // Clear previous active states
        stars.forEach(s => s.classList.remove('active'));

        // Set the clicked star and all previous stars to active
        selectedRating = index + 1;
        for (let i = 0; i <= index; i++) {
            stars[i].classList.add('active');
        }
    });
});

// Submit Rating Button
const submitRatingBtn = document.getElementById('submitRatingBtn');
const ratingResult = document.getElementById('ratingResult');

submitRatingBtn.addEventListener('click', function() {
    if (selectedRating > 0) {
        ratingResult.textContent = `You rated this restaurant ${selectedRating} stars!`;
    } else {
        ratingResult.textContent = "Please select a rating before submitting.";
    }
});

</script>

<style>
.category-button {
    background-color: #b6200c;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px; 
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease; 
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
    margin: 5px;
}

.category-button:hover {
    background-color: #b6200c; 
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}

.category-button:active {
    background-color: #b6200c; 
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transform: translateY(2px);
}

.search-section {
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.search-group {
    position: relative; 
    width: 100%;
    max-width: 500px;
}

.search-input {
    width: 100%; 
    padding: 12px 20px; 
    font-size: 16px;
    border: 2px solid #3498db;
    border-radius: 25px;
    outline: none; 
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: border-color 0.3s ease, box-shadow 0.3s ease; 
}

.search-input::placeholder {
    color: #7f8c8d;
    font-style: italic; 
}

/* Focus Effect */
.search-input:focus {
    border-color: #2980b9;
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); 
}

.search-group::before {
    content: '\f002';
    font-family: 'FontAwesome';
    position: absolute;
    left: 15px; 
    top: 50%;
    transform: translateY(-50%);
    color: #7f8c8d;
    font-size: 16px;
}

.rating-container {
    margin-top: 10px;
    display: flex; 
    align-items: center;
}

.rating-input {
    display: flex;
    align-items: center;
    margin-left: 10px;
}

.form-control {
    width: 80px; 
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-right: 5px; 
}

.submit-rating {
    margin-left: 5px;
}

/* Menu item card */
.food-card {
    width: 350px;
    height: 300px;
    position: relative; 
    overflow: hidden;
}

.food-card-fav {
    position: absolute; 
    top: 10px;
    right: 10px;
    font-size: 1.5rem;
    z-index: 1; 
}

.food-card-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s;
}

.food-card-img:hover {
    transform: scale(1.05);
}

.restaurant-cards {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
}
/*last for cars*/


.card {
    width: 300px;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    margin: 20px auto;
    background-color: white;
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Add transition for smooth effect */
}

.card:hover {
    transform: translateY(-5px); /* Slightly lift the card */
    box-shadow: 0 8px 16px rgba(0,0,0,0.3); /* Increase the shadow on hover */
}

.image-link {
    display: block;
    text-decoration: none;
}

.image-container {
    width: 100%;
}

.restaurant-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    cursor: pointer;
}

.card-content {
    padding: 15px;
}

.restaurant-name {
    font-size: 22px;
    font-weight: bold;
    margin-bottom: 15px;
    text-align: center;
    color: #333;
}

.actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
}



    .bi-heart , .bi-heart-fill{
        font-size: 1.5rem;
        color: red;
        z-index: 2;
        border-raduis: 14px;
    }

        .bi-heart:hover{
            transform: scale(1.05); /* Slightly scale up the box */

            color: orange
        }

        .bi-heart-fill :hover {
            transform: scale(1.05); /* Slightly scale up the box */
        
            color: orange
        }
.rating {
    display: flex;
    direction: rtl;
}

.star {
    font-size: 24px;
    color: gray;
    cursor: pointer;
    transition: color 0.3s ease;
}

.star:hover,
.star.active {
    color: gold;
}

.submit-rating {
    width: 100%;
    padding: 10px;
    margin-top: 15px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
}

.submit-rating:hover {
    background-color: #218838;
}

.rating-result {
    margin-top: 10px;
    font-size: 16px;
    color: #555;
    text-align: center;
}

</style>
