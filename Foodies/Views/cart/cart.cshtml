@model List<MenuItem>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Cart</title>
    <link rel="stylesheet" href="styles.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="script.js" defer></script>
</head>
<body>
  <nav>
    <div class="logo">🍴 Foodies</div>
    <div class="nav-icons">
        <i class="user-icon">👤</i>
        <i class="search-icon">🔍</i>
        <i class="cart-icon">🛒 Cart (<span id="cart-count">3</span>)</i>
        <i class="menu-icon">☰</i>
    </div>
  </nav>

  <section class="cart-section">
      <h2>Cart 🛒</h2>
      <div class="cart-items"

        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                if (item != null)
                {
                     <div class="cart-item" data-price="150">
                      <img src="a2.jpg" alt="Cruncher Delight">
                      <div class="item-details">
                          <p class="item-name">@item.Name</p>
                          <p class="restaurant">Restaurant: KFC</p>
                      </div>
                      <div class="item-price">@item.Price</div>
                      <div class="item-quantity">
                          <button class="decrease-btn">-</button>
                          <span class="quantity">1</span>
                          <button class="increase-btn">+</button>
                      </div>
                      <i class="fa-solid fa-trash delicon"></i>
                  </div>

                }

            }
        }
          

            <div class="item-price">Price: 100EGP</div>
            <div class="item-quantity">
                <button class="decrease-btn">-</button>
                <span class="quantity">1</span>
                <button class="increase-btn">+</button>
            </div>
            <i class="fa-solid fa-trash delicon"></i>
        </div>
      </div>
      <div class="special-instructions">
        <p class="special-instructions-title">📋 Special Instructions (Optional)</p>
        <input type="text" class="special-input" placeholder="Enter your instructions...">
    </div>

      <div class="checkout-summary">
          <div class="subtotal">
              <p>Sub Total</p>
              <p id="subtotal">400EGP</p>
          </div>
          <div class="delivery">
              <p>Delivery</p>
              <p>20EGP</p>
          </div>
          <div class="total">
              <p>Total</p>
              <p id="total">420EGP</p>
          </div>
      </div>

      <div class="checkout-buttons">
        <button type="button" class="btn btn-secondary btn-lg">Explore Menu</button>
        <button type="button" class="btn btn-outline-success btn-lg">Check-out</button>
      </div>
  </section>











  <script>
      // Update Total and Subtotal
function updateCartTotals() {
    const cartItems = document.querySelectorAll('.cart-item');
    let subtotal = 0;
    cartItems.forEach(item => {
        const price = parseFloat(item.getAttribute('data-price'));
        const quantity = parseInt(item.querySelector('.quantity').textContent);
        subtotal += price * quantity;
    });
    document.getElementById('subtotal').textContent = `${subtotal}EGP`;
    document.getElementById('total').textContent = `${subtotal + 20}EGP`; // Delivery charge is fixed at 20
}

// Increase quantity
document.querySelectorAll('.increase-btn').forEach(button => {
    button.addEventListener('click', (e) => {
        const quantitySpan = e.target.closest('.item-quantity').querySelector('.quantity');
        let quantity = parseInt(quantitySpan.textContent);
        quantitySpan.textContent = ++quantity;
        updateCartTotals();
    });
});

// Decrease quantity
document.querySelectorAll('.decrease-btn').forEach(button => {
    button.addEventListener('click', (e) => {
        const quantitySpan = e.target.closest('.item-quantity').querySelector('.quantity');
        let quantity = parseInt(quantitySpan.textContent);
        if (quantity > 1) {
            quantitySpan.textContent = --quantity;
            updateCartTotals();
        }
    });
});

// Delete Item
document.querySelectorAll('.delicon').forEach(button => {
    button.addEventListener('click', (e) => {
        const cartItem = e.target.closest('.cart-item');
        cartItem.remove();
        updateCartTotals();
        updateCartCount();
    });
});

// Update Cart Count
function updateCartCount() {
    const cartCount = document.querySelectorAll('.cart-item').length;
    document.getElementById('cart-count').textContent = cartCount;
}

// Initialize totals and cart count on load
window.addEventListener('load', () => {
    updateCartTotals();
    updateCartCount();
});

  </script>
</body>
</html>
<style>
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
}

header {
    background-color: #e0e0e0;
    padding: 10px;
}
nav {
    position: fixed; 
    top: 0; 
    left: 0;
    width: 100%;
    background-color: #007b80;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    display: flex;
    justify-content: space-around;
    align-items: center;
    height: 50px;
}

.logo {
    font-size: 24px;
    font-weight: bold;
}

.nav-icons {
    display: flex;
    gap: 15px;
}

.nav-icons i {
    cursor: pointer;
    font-size: 18px;
}


.logo {
    font-size: 24px;
}

.nav-icons i {
    margin-left: 15px;
    cursor: pointer;
}

.cart-section {
    max-width: 800px;
    margin: 30px auto;
    background-color: white;
    padding: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
}

h2 {
    font-size: 24px;
    margin-bottom: 15px;
}

.cart-items {
    padding-bottom: 15px;
}

.cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
}

.cart-item img {
    width: 80px;
    height: 80px;
    object-fit: cover;
}

.item-details {
    flex-grow: 1;
    padding-left: 15px;
}

.item-name {
    font-size: 18px;
    font-weight: bold;
}

.restaurant {
    font-size: 14px;
    color: gray;
}

.item-price {
    font-size: 16px;
    font-weight: bold;
}

.item-quantity {
    display: flex;
    align-items: center;
}

.item-quantity button {
    background-color: #e0e0e0;
    border: none;
    border-radius: 5px;
    padding: 4px 10px;
    cursor: pointer;
}

.item-quantity span {
    margin: 0 10px;
}

.remove-item {
    background: none;
    border: none;
    font-size: 20px;
    cursor: pointer;
}

.remove-item:hover{
    color:#c82020
}
.special-instructions {
    margin: 20px 0;
    font-size: 16px;
}

.checkout-summary {
    padding: 15px 0;
}

.checkout-summary div {
    display: flex;
    justify-content: space-between;
    padding: 5px 0;
}

.checkout-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}


.delicon{
    margin-left: 7px;
    margin-bottom: 3px;
}

.delicon:hover {
    color: #c82020;
}
.item-price {
    margin-right: 5px;
}
.item-quantity button,
.remove-item {
    background-color: transparent; 
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    font-size: 18px; 
    transition: background-color 0.3s ease;
}

.item-quantity button:hover,
.remove-item:hover {
    background-color: rgba(0, 0, 0, 0.1);
}

.remove-item.delicon:hover {
    background-color: rgba(255, 69, 58, 0.1);
    color: red;
}



.special-instructions {
    position: relative; 
    display: flex;
    flex-direction: column;
    margin-bottom: 20px;
}

.special-input {
    display: none; 
    margin-top: 10px;
    padding: 8px;
    width: 100%;
    border: 1px solid #ccc;
    border-radius: 4px;
    outline: none;
}

.special-instructions .special-input {
    display: block;
}

.special-instructions {
    position: relative; 
    display: flex;
    flex-direction: column;
    margin-bottom: 20px;
}

.special-input {
    display: none; 
    margin-top: 10px;
    padding: 20px;
    width: 100%;
    border: 1px solid #ccc;
    border-radius: 4px;
    outline: none;
    transition: border 0.3s ease, box-shadow 0.3s ease; 
}

.special-instructions:hover .special-input {
    display: block; 
}

.special-input:hover {
    border: 1px solid #4CAF50; 
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
}

.menu-icon:hover{
    color: white;
}
</style>
