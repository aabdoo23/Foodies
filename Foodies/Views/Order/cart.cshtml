@model List<MenuItem>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Cart</title>
     <link rel="stylesheet" href="~/css/Main.css"> 

    <meta name="viewport" content="width=device-width, initial-scale=1">
    @* <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" /> *@
    @* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" /> *@
    @* <script src="script.js" defer></script> *@
</head>
<body>
  <nav>
    
    <div class="nav-icons">
        <i class="user-icon">👤</i>
        <i class="search-icon">🔍</i>
        <i class="cart-icon">🛒 Cart (<span id="cart-count">3</span>)</i>
        <i class="menu-icon">☰</i>
    </div>
  </nav>

  <section class="cart-section">
      <h2>🛒 Cart </h2>
      <div class="cart-items">


            @if (Model.Count() > 0 ){
                @foreach (var item in Model)
            {
                @if( item != null){
                 <div class="cart-item" data-price="@item.Price" 
                               data-item-id="@item.Id">
                    <img src="@item.img" alt="@item.Name" loading="lazy">
                  <div class="item-details">
                      <p class="item-name">@item.Name</p>
                      <p class="restaurant">Restaurant: KFC</p>
                  </div>
                          <div class="item-price">@item.Price</div>
                  <div class="item-quantity">
                      <button class="decrease-btn">-</button>
                      <span class="quantity">1</span>
                      <button class="increase-btn">+</button>
                  </div>
                          <i class="fa-solid fa-trash delicon"  ></i>
              </div>
              }
                }
            }else
            {
                <p id = "empty">Your Cart is Empty</p>
            }





          



      </div>
      <div class="special-instructions">
        <p class="special-instructions-title">📋 Special Instructions (Optional)</p>
        <input type="text" class="special-input" placeholder="Enter your instructions...">
    </div>

      <div class="checkout-summary">
          <div class="subtotal">
              <p>Sub Total</p>
              <p id="subtotal">400EGP</p>
          </div>
          <div class="delivery">
              <p>Delivery</p>
              <p>20EGP</p>
          </div>
          <div class="total">
              <p>Total</p>
              <p id="total">420EGP</p>
          </div>
      </div>

      <div class="checkout-buttons">
        <button type="button" class="btn">Explore Menu</button>
        <button type="button" class="btn" id ="checkoutButton"
            >Check-out</button>
      </div>
  </section>
    <script>


            var subtotal = 0;
document.addEventListener('DOMContentLoaded', function() {
    // Find the button by its ID
    const button = document.getElementById('checkoutButton');
    
    // Attach the event listener to the button
    button.addEventListener('click', function() {
        checkout();
        });
});

function checkout(){
    if(subtotal >0){
            var form = document.createElement("form");
            form.method = "post";
            form.action = "/Order/checkout"; // Assuming HomeController and View2 action
            console.log(subtotal);
            var input = document.createElement("input");
            input.type = "hidden";
            input.name = "total";

            input.value = subtotal;
            form.appendChild(input);

            document.body.appendChild(form);
            form.submit();
        
    }
    else{
        alert('Add Items to your Cart First')
    }
}
      // Update Total and Subtotal
function updateCartTotals() {
    const cartItems = document.querySelectorAll('.cart-item');
    // let subtotal = 0;
    cartItems.forEach(item => {
        const price = parseFloat(item.getAttribute('data-price'));
        const quantity = parseInt(item.querySelector('.quantity').textContent);
        subtotal += price * quantity;
    });
    document.getElementById('subtotal').textContent = `${subtotal}EGP`;
    document.getElementById('total').textContent = `${subtotal + 20}EGP`; // Delivery charge is fixed at 20
}

// Increase quantity
document.querySelectorAll('.increase-btn').forEach(button => {
    button.addEventListener('click', (e) => {
        const quantitySpan = e.target.closest('.item-quantity').querySelector('.quantity');
        let quantity = parseInt(quantitySpan.textContent);
         const cartItem = e.target.closest('.cart-item');
        const itemId = cartItem.getAttribute('data-item-id'); // Get the item ID

        incItem(itemId, quantity, quantitySpan)
    });
});

function incItem(itemId, quantity,quantitySpan ) {

    console.log(itemId);
    $.ajax({
    url: '/Order/addCart', // URL to the controller's action method
    type: 'GET', // Type of request
    data: { itemId: itemId }, // Send the first itemId in the query string
    success: function(response) {
        alert('increased');
        quantitySpan.textContent = ++quantity;
        updateCartTotals();
    },
    error: function(err) {
        console.error('Error increasing quantity', err);
    }
});
}
// Decrease quantity
document.querySelectorAll('.decrease-btn').forEach(button => {
    button.addEventListener('click', (e) => {
        const quantitySpan = e.target.closest('.item-quantity').querySelector('.quantity');
        let quantity = parseInt(quantitySpan.textContent);
        const cartItem = e.target.closest('.cart-item');
        const itemId = cartItem.getAttribute('data-item-id'); // Get the item ID
        decItem(itemId, quantity, quantitySpan)
    });
});

function decItem(itemId, quantity, quantitySpan) {
    if (quantity > 1) {
              // console.log(itemId);
            $.ajax({
                url: '/Order/removeCart', // URL to the controller's action method
                type: 'GET', // Type of request
                data: { itemId: itemId , dec: true}, // Send the itemId in the query string
                success: function(response) {
                    alert('decreased');
                },
                error: function(err) {
                    console.error('Error decreasing the item', err);
                }
            });
            quantitySpan.textContent = --quantity;
            updateCartTotals();
        }

}

// Delete Item

document.querySelectorAll('.delicon').forEach(button => {
    button.addEventListener('click', (e) => {
        const cartItem = e.target.closest('.cart-item');
        const itemId = cartItem.getAttribute('data-item-id'); // Get the item ID

        // Call deleteItem function with itemId and event
        deleteItem(itemId, cartItem);
    });
});

// Define the deleteItem function
function deleteItem(itemId, cartItem) {
    console.log(itemId);
    $.ajax({
        url: '/Order/removeCart', // URL to the controller's action method
        type: 'GET', // Type of request
        data: { itemId: itemId }, // Send the itemId in the query string
        success: function(response) {
            alert('Removed from cart');
            // Remove the item from the DOM if the request is successful
            cartItem.remove();
            updateCartTotals();
            updateCartCount();
        },
        error: function(err) {
            console.error('Error removing from cart', err);
        }
    });
}



// Update Cart Count
function updateCartCount() {
    const cartCount = document.querySelectorAll('.cart-item').length;
    document.getElementById('cart-count').textContent = cartCount;
}

// Initialize totals and cart count on load
window.addEventListener('load', () => {
    updateCartTotals();
    updateCartCount();
});

  </script>
</body>
</html>
<style>




/* header {
    padding: 10px;
}
nav {
    position: fixed; 
    top: 0; 
    left: 0;
    width: 100%;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    display: flex;
    justify-content: space-around;
    align-items: center;
    height: 50px;
}


.nav-icons {
    display: flex;
    gap: 15px;
}

.nav-icons i {
    cursor: pointer;
    font-size: 18px;
}
 */

 

.nav-icons i {
    margin-left: 15px;
    cursor: pointer;
}


#empty{
    color:red;
    text-align: center;
    font-size: 20px;
    font-weight:bold;
}
.cart-section {
    /* margin-top: 300px; */
    max-width: 800px;
    border-radius: 15px;
    margin: 60px auto;
    background-color: white;
    padding: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
}






h2 {
    font-size: 24px;
    margin-bottom: 15px;
}

.cart-items , .checkout-buttons, .checkout-summary{
    
    padding: 25px 30px;
}

.cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
}

.cart-item img {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 5px;
}

.item-details {
    flex-grow: 1;
    padding-left: 15px;
}

.item-name {
    font-size: 18px;
    font-weight: bold;
}

.restaurant {
    font-size: 14px;
    color: gray;
}

.item-price {
    font-size: 16px;
    font-weight: bold;
}

.item-quantity {
    display: flex;
    align-items: center;
}

.item-quantity button {
    background-color: transparent;
    border: none;
    border-radius: 5px;
    padding: 4px 10px;
    cursor: pointer;
}

.item-quantity button:hover,
.remove-item:hover {
    background-color: rgba(46, 191, 165, 0.6);
}

.remove-item.delicon:hover {
    background-color: rgba(255, 69, 58, 0.1);
    color: red;
}

.item-quantity span {
    margin: 0 10px;
}

.remove-item {
    background: none;
    border: none;
    font-size: 20px;
    cursor: pointer;
}

.remove-item:hover{
    color:#c82020
}


.checkout-summary {
    font-size: 18px;
}

.checkout-summary div {
    display: flex;
    justify-content: space-between;
}

.checkout-buttons {
    display: flex;
    justify-content: space-between;
}

.checkout-buttons button{
    font-size: 15px;
}

.delicon{
    margin-left: 7px;
    margin-bottom: 3px;
}

.delicon:hover {
    color: #c82020;
}
.item-price {
    margin-right: 5px;
}

.remove-item.delicon:hover {
    background-color: rgba(255, 69, 58, 0.1);
    color: red;
}



.special-instructions {
    padding: 10px 30px;

    position: relative; 
    display: flex;
    flex-direction: column;
}

.special-input {
    display: none; 
    padding: 18px 7px;
    width: 100%;
    border: 1px solid #ccc;
    border-radius: 4px;
    outline: none;
    border-radius: 14px;
    font-size:13px;
}

.special-instructions .special-input {
    display: block;
}


.special-instructions:hover .special-input {
    display: block; 
}

.special-input:hover {
    border: 1px solid #4CAF50; 
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
}

.menu-icon:hover{
    color: white;
}
</style>